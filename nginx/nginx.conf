server {
    listen 80;
    server_name localhost;
    root /usr/share/nginx/html;
    index index.html;
    
    # 设置客户端请求体大小限制为0，表示不限制上传大小
    client_max_body_size 0;

    # 启用gzip压缩
    gzip on;
    gzip_comp_level 6;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/x-javascript
        application/json
        application/xml
        application/xml+rss
        application/vnd.ms-fontobject
        application/x-font-ttf
        font/opentype
        image/svg+xml;

    # 对API请求的处理（如果使用反向代理）
    location ^~ /api/ {
        # 在实际部署时替换为真实的API服务器地址
        proxy_pass http://api:3000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # HTML文件 - 确保每次都重新获取
    location ~ \.html$ {
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
        try_files $uri $uri/ /index.html;
    }

    # JavaScript和CSS文件 - 确保每次都重新验证
    location ~* \.(js|css)$ {
        add_header Cache-Control "no-cache";
        add_header Pragma "no-cache";
        add_header Expires "0";
        access_log off;
    }

    # 其他静态资源 (使用长缓存)
    location ~* \.(png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        # 调整为较短的缓存时间，或根据需求配置
        expires 7d;
        add_header Cache-Control "public, max-age=604800";  # 7天
        access_log off;
    }

    # 确保前端路由能够正常工作
    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
        add_header Expires "0";
    }

    # 安全性设置
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Referrer-Policy "strict-origin-when-cross-origin";

    # 错误处理
    error_page 404 /index.html;
    error_page 500 502 503 504 /50x.html;
    location = /50x.html {
        root /usr/share/nginx/html;
    }
} 